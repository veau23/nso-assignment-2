- name: Common configuration for all hosts
  hosts: all
  gather_facts: yes

- name: Configuring HAProxy
  hosts: HAproxy
  become: true
  become_method: sudo
  tasks:
    - name: Install HAProxy
      apt:
        name: haproxy
        update_cache: yes
        state: latest

    - name: Configure HAProxy for load balancing
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg

    - name: Restart HAProxy service
      service:
        name: haproxy
        state: restarted

- name: Web Server Configuration
  hosts: webservers
  become: yes
  become_method: sudo
  tasks:
    - name: Refresh apt cache
      apt:
        update_cache: yes

    - name: Ensure pip3 is installed
      apt:
        name: python3-pip
        state: latest

    - name: Install Flask framework
      pip:
        executable: pip3
        name: flask
        state: latest

    - name: Install Gunicorn WSGI server
      pip:
        executable: pip3
        name: gunicorn
        state: latest

    - name: Deploy Flask application
      copy:
        src: application2.py
        dest: /home/ubuntu/application2.py
        owner: ubuntu
        mode: '0644'
 - name: Start Flask app using Gunicorn
      shell: gunicorn -w 2 -D -b 0.0.0.0:5000 application2:app
      args:
        chdir: /home/ubuntu

- name: Testing HAProxy Load Balancing
  hosts: HAproxy
  become: yes
  tasks:
    - name: Test HAProxy - Round 1
      shell: curl localhost
      register: result1
    - debug:
        var: result1.stdout
        
    - name: Test HAProxy - Round 2
      shell: curl localhost
      register: result2
    - debug:
        var: result2.stdout
        
    - name: Test HAProxy - Round 3
      shell: curl localhost
      register: result3
    - debug:
        var: result3.stdout
