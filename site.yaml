---
- name: Ensure all hosts have facts gathered
  hosts: all
  gather_facts: yes

- name: Configuring HAProxy and Nginx on HAproxy host
  hosts: HAproxy
  become: yes
  tasks:
    - name: Install HAProxy
      apt:
        name: haproxy
        update_cache: yes
        state: latest

    - name: Configure HAProxy for load balancing
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg

    - name: Validate HAProxy config before restart
      command: haproxy -c -f /etc/haproxy/haproxy.cfg
      register: haproxy_config_check
      failed_when: haproxy_config_check.rc != 0

    - name: Restart HAProxy
      service:
        name: haproxy
        state: restarted
      when: haproxy_config_check.rc == 0

   

- name: Web server configuration
  hosts: webservers
  become: yes
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install required packages ( Flask, Pip)
      apt:
        name:
          - python3-flask
          - python3-pip
        state: present

    - name: Install Flask via pip3
      pip:
        name: flask
        executable: pip3
        state: latest

    - name: Install Gunicorn
      pip:
        name: gunicorn
        executable: pip3
        state: latest

    - name: Copy Flask app code
      copy:
        src: ./application2.py
        dest: /home/ubuntu/application2.py
        owner: ubuntu
        mode: '0644'

    - name: Run Flask app with Gunicorn
      shell: gunicorn -w 2 -D -b 0.0.0.0:5000 application2:app
      args:
        chdir: /home/ubuntu

- name: Testing HAProxy load balancing
  hosts: HAproxy
  become: yes
  tasks:
    - name: Testing the HAProxy load balancing (1st time)
      shell: curl localhost
      register: output1
      args:
        warn: false
    - debug:
        var: output1.stdout

    - name: Testing the HAProxy load balancing (2nd time)
      shell: curl localhost
      register: output2
      args:
        warn: false
    - debug:
        var: output2.stdout

    - name: Testing the HAProxy load balancing (3rd time)
      shell: curl localhost
      register: output3
      args:
        warn: false
    - debug:
        var: output3.stdout
